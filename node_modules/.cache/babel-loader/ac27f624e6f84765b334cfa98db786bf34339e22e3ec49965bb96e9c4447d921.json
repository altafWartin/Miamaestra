{"ast":null,"code":"var _jsxFileName = \"/Users/altafziya/Desktop/Projects/Active Projects/miamaestra/src/components/ChatBotButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ChatBox from './ChatBox'; // Chat component\nimport { VideoConferencePopup } from './VideoConferencePopup'; // Video conference popup\nimport closeAi from '../assets/closeAi.svg'; // Close AI icon\nimport chatMessageIcon from '../assets/chatMessage.svg'; // Chat message icon\nimport miaMaestraLogo from '../assets/miaMaestraLogo.svg'; // AI logo\nimport closeChatMessageIcon from '../assets/closeChat.svg'; // Close chat message icon\nimport { Button } from 'primereact/button'; // PrimeReact button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBotButton = () => {\n  _s();\n  // States to control the visibility of AI and Chatbot\n  const [isAiOpen, setIsAiOpen] = useState(false); // Tracks if AI (video conference) popup is open\n  const [isAiChatOpen, setIsAiChatOpen] = useState(false); // Tracks if ChatBox is open\n\n  // Toggles the AI popup state\n  const toggleAi = () => setIsAiOpen(!isAiOpen);\n\n  // Toggles the ChatBox state\n  const toggleAiChat = () => setIsAiChatOpen(!isAiChatOpen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center gap-5 items-center fixed bottom-5 right-5 z-50\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"text-white bg-black transform transition-transform duration-300 hover:scale-110\",\n        onClick: toggleAi // When clicked, it toggles AI popup visibility\n        ,\n        \"aria-label\": isAiOpen ? 'Close AI' : 'Open AI' // Changes label based on state\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isAiOpen ? closeAi : miaMaestraLogo // Switches between 'Close' or 'Open' AI icon\n          ,\n          alt: isAiOpen ? 'Close AI Icon' : 'AI Icon' // Changes alt text based on state\n          ,\n          className: \"w-9 aspect-square transition-opacity duration-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), isAiOpen && /*#__PURE__*/_jsxDEV(Button, {\n        className: \"text-white rounded-full transform transition-transform duration-300 hover:scale-110\",\n        onClick: toggleAiChat // When clicked, it toggles ChatBox visibility\n        ,\n        \"aria-label\": isAiChatOpen ? 'Close chatbot' : 'Open chatbot' // Changes label based on state\n        ,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isAiChatOpen ? closeChatMessageIcon : chatMessageIcon // Switches between 'Close' or 'Open' Chat icon\n          ,\n          alt: isAiChatOpen ? 'Close Chatbot Icon' : 'Chatbot Icon' // Changes alt text based on state\n          ,\n          className: \"w-12 aspect-square transition-opacity duration-300\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), isAiChatOpen && /*#__PURE__*/_jsxDEV(ChatBox, {\n      onClose: () => setIsAiOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 31\n    }, this), \" \", isAiOpen && /*#__PURE__*/_jsxDEV(VideoConferencePopup, {\n      onClose: () => setIsAiChatOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 26\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatBotButton, \"poHqF2y3klghVzAAxs3Xrb6TgEY=\");\n_c = ChatBotButton;\nexport default ChatBotButton;\nvar _c;\n$RefreshReg$(_c, \"ChatBotButton\");","map":{"version":3,"names":["React","useState","ChatBox","VideoConferencePopup","closeAi","chatMessageIcon","miaMaestraLogo","closeChatMessageIcon","Button","jsxDEV","_jsxDEV","ChatBotButton","_s","isAiOpen","setIsAiOpen","isAiChatOpen","setIsAiChatOpen","toggleAi","toggleAiChat","children","className","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClose","_c","$RefreshReg$"],"sources":["/Users/altafziya/Desktop/Projects/Active Projects/miamaestra/src/components/ChatBotButton.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport ChatBox from './ChatBox'; // Chat component\nimport { VideoConferencePopup } from './VideoConferencePopup'; // Video conference popup\nimport closeAi from '../assets/closeAi.svg'; // Close AI icon\nimport chatMessageIcon from '../assets/chatMessage.svg'; // Chat message icon\nimport miaMaestraLogo from '../assets/miaMaestraLogo.svg'; // AI logo\nimport closeChatMessageIcon from '../assets/closeChat.svg'; // Close chat message icon\nimport { Button } from 'primereact/button'; // PrimeReact button\n\nconst ChatBotButton = () => {\n    // States to control the visibility of AI and Chatbot\n    const [isAiOpen, setIsAiOpen] = useState(false); // Tracks if AI (video conference) popup is open\n    const [isAiChatOpen, setIsAiChatOpen] = useState(false); // Tracks if ChatBox is open\n\n\n\n    // Toggles the AI popup state\n    const toggleAi = () => setIsAiOpen(!isAiOpen);\n    \n    // Toggles the ChatBox state\n    const toggleAiChat = () => setIsAiChatOpen(!isAiChatOpen);\n\n    return (\n        <div>\n            {/* Floating Button Container */}\n            <div className=\"flex justify-center gap-5 items-center fixed bottom-5 right-5 z-50\">\n                \n                {/* Button to toggle the AI (Video Conference) popup */}\n                <Button\n                    className=\"text-white bg-black transform transition-transform duration-300 hover:scale-110\"\n                    onClick={toggleAi} // When clicked, it toggles AI popup visibility\n                    aria-label={isAiOpen ? 'Close AI' : 'Open AI'} // Changes label based on state\n                >\n                    <img\n                        src={isAiOpen ? closeAi : miaMaestraLogo} // Switches between 'Close' or 'Open' AI icon\n                        alt={isAiOpen ? 'Close AI Icon' : 'AI Icon'} // Changes alt text based on state\n                        className=\"w-9 aspect-square transition-opacity duration-300\"\n                    />\n                </Button>\n\n                {/* Button to toggle the ChatBox */}\n                {isAiOpen && \n                <Button\n                    className=\"text-white rounded-full transform transition-transform duration-300 hover:scale-110\"\n                    onClick={toggleAiChat} // When clicked, it toggles ChatBox visibility\n                    aria-label={isAiChatOpen ? 'Close chatbot' : 'Open chatbot'} // Changes label based on state\n                >\n                    <img\n                        src={isAiChatOpen ? closeChatMessageIcon : chatMessageIcon} // Switches between 'Close' or 'Open' Chat icon\n                        alt={isAiChatOpen ? 'Close Chatbot Icon' : 'Chatbot Icon'} // Changes alt text based on state\n                        className=\"w-12 aspect-square transition-opacity duration-300\"\n                    />\n                </Button>}\n            </div>\n\n            {/* Conditional Rendering for ChatBox and Video Conference Popup */}\n            {isAiChatOpen  && <ChatBox onClose={() => setIsAiOpen(false)} />} {/* Displays ChatBox when isAiChatOpen is true */}\n            {isAiOpen && <VideoConferencePopup onClose={() => setIsAiChatOpen(false)} />} {/* Displays VideoConferencePopup when isAiOpen is true */}\n        </div>\n    );\n};\n\nexport default ChatBotButton;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}